@import '../app/placeholder.scss';

/* ============================ header START ================================================================= */
.header {
	& .container {
		display: flex;
		align-items: center;
		justify-content: space-between;
	}
	&__logo {
		& > * {
			width: 32rem;
			height: 6rem;
		}
		@media screen and (min-width: 667px) {
			margin-right: 1rem;
		}
	}
	&__icon {

	}
	&__text {
		@extend %text;
		font-weight: 300;
	}
}

.menu {
	@media screen and (max-width: 666px) {
		position: fixed;
		width: 100%;
		height: 100%;
		display: flex;
		flex-direction: column;
		align-items: center;
		top: 0;
		left: 0;
		transform: translateX(-100%);
		transition: transform 0.3s ease;
		overflow: auto;
		padding: 4rem 1.5rem;
		background-color: var(--light-color);
		&.menu-open {
			transform: translateX(0);
		}
	}
	&__list {
		display: flex;
		flex-wrap: wrap;
		justify-content: center;
		align-items: center;
		@media screen and (max-width: 666px) {
			flex-direction: column;
		}
	}
	&__item {
		@media screen and (max-width: 666px) {
			&:not(:last-child) {
				margin-bottom: 1rem;
			}
		}
		@media screen and (min-width: 667px) {
			&:not(:last-child) {
				margin-right: 2rem;
			}
		}
		& > * {
			font-weight: 600;
			font-size: 1.6rem;
			line-height: 2rem;
			padding: 1rem;
			//color: var(--burger-color);
         color: var(--primary-text-color);
			transition: color .25s var(--time-distribution-function);
			&:hover,
			&:focus {
				color: var(--accent-color);
			}
			@media screen and (max-width: 666px) {
				font-size: 3rem;
				line-height: 3.4rem;
			}
		}
	}
}

.burger-menu {
	width: 40px;
	height: 40px;
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	cursor: pointer;
	transition: transform 330ms ease-out;
	margin-left: auto;
	@media screen and (min-width: 667px) {
		display: none;
	}
	& .line {
		background-color: var(--burger-color);
		border-radius: 5px;
		width: 100%;
		height: 4px;
		&.half {
			width: 50%;
		}
		&.start {
			transition: transform 330ms cubic-bezier(0.54, -0.81, 0.57, 0.57);
			transform-origin: right;
		}
		&.end {
			align-self: flex-end;
			transition: transform 330ms cubic-bezier(0.54, -0.81, 0.57, 0.57);
			transform-origin: left;
		}
	}
	&.open {
		transform: rotate(-45deg);
		& .line.start {
			transform: rotate(-90deg) translateX(3px);
		}
		& .line.end {
			transform: rotate(-90deg) translateX(-3px);
		}
	}
}
//or

//є баг коли перезагружаєм сторінку значок бургеру не змінюється
//томущо інпут залишається чекед
input[type="checkbox"]#hamburger-toggle {
	position: absolute;
	width: 1px;
	height: 1px;
	margin: -1px;
	border: 0;
	padding: 0;
	clip: rect(0 0 0 0);
	overflow: hidden;
}
.hamburger {
	--bounce: 0.2s cubic-bezier(0.3, 0.3, 0.3, 1);
	--ease: 0.12s cubic-bezier(0.3, 0.3, 0.3, 1);
	&__label {
		--weight: 10%;
		--size: 50px;
		position: relative;
		display: grid;
		place-items: center;
		width: var(--size);
		height: var(--size);
		cursor: pointer;
		margin-left: auto;
		@media screen and (min-width: 667px) {
			display: none;
		}
		& circle {
			width: 100%;
			height: 100%;
			fill: none;
			stroke: var(--hamburger-color);
			stroke-width: calc(var(--weight) * 0.6);
			stroke-dasharray: 284;
			stroke-dashoffset: 284;
			stroke-linecap: round;
			transition: 0.4s ease;
		}
		& .hamburger {
			position: absolute;
			display: grid;
			place-items: center;
			width: 63%;
			height: 63%;
		}

		& .hamburger::before,
		.hamburger .center,
		.hamburger::after {
			--tx: 0;
			--rt: 0deg;
			content: "";
			position: absolute;
			width: 100%;
			height: var(--weight);
			border-radius: 0.3em;
			background: var(--hamburger-color);
			transform-origin: right;
			transition: var(--bounce) 0.1s;
		}

		& .hamburger .center {
			right: 0;
			transition: var(--bounce), width var(--ease);
			transition-delay: 0.3s;
		}
		& .hamburger::before {
			top: 0;
			transform: translate(var(--tx), 100%) rotate(var(--rt));
		}
		& .hamburger::after {
			bottom: 0;
			transform: translate(var(--tx), -100%) rotate(var(--rt));
		}
	}
}
#hamburger-toggle:checked ~ .hamburger__label circle {
	stroke-dashoffset: 0;
	transition-delay: 0.1s;
}
#hamburger-toggle:checked ~ .hamburger__label .hamburger::before, #hamburger-toggle:checked ~ .hamburger__label .hamburger::after {
	--tx: -15%;
	--rt: 45deg;
	transition: var(--bounce) 0.1s;
}
#hamburger-toggle:checked ~ .hamburger__label .hamburger::before {
	--ty: 15%;
	--rt: -45deg;
}
#hamburger-toggle:checked ~ .hamburger__label .hamburger .center {
	width: 0;
	right: calc(var(--size) * -0.16);
	transition: width var(--ease), right var(--bounce);
}
/* ============================ header END ================================================================= */
